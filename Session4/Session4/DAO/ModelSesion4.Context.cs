//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Session4Entities : DbContext
    {
        public Session4Entities()
            : base("name=Session4Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Part> Parts { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
    
        public virtual ObjectResult<AllActivities_Result> AllActivities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllActivities_Result>("AllActivities");
        }
    
        public virtual ObjectResult<SelectAllActivities_Result> SelectAllActivities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllActivities_Result>("SelectAllActivities");
        }
    
        public virtual ObjectResult<All_Activities_Result> All_Activities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_Result>("All_Activities");
        }
    
        public virtual ObjectResult<Nullable<decimal>> CURRENT_STOCK(Nullable<long> wareHouseID, Nullable<long> partID, string batchNumber)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CURRENT_STOCK", wareHouseIDParameter, partIDParameter, batchNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OUT_OF_STOCK(Nullable<long> wareHouseID, Nullable<long> partID, string batchNumber)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OUT_OF_STOCK", wareHouseIDParameter, partIDParameter, batchNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RECEIVED_STOCK(Nullable<long> wareHouseID, Nullable<long> partID, string batchNumber)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RECEIVED_STOCK", wareHouseIDParameter, partIDParameter, batchNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CURRENT_STOCK_2(Nullable<long> wareHouseID, Nullable<long> partID)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CURRENT_STOCK_2", wareHouseIDParameter, partIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OUT_OF_STOCK_2(Nullable<long> wareHouseID, Nullable<long> partID)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OUT_OF_STOCK_2", wareHouseIDParameter, partIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RECEIVED_STOCK_2(Nullable<long> wareHouseID, Nullable<long> partID)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RECEIVED_STOCK_2", wareHouseIDParameter, partIDParameter);
        }
    
        public virtual int AddOrder(Nullable<long> transaction, Nullable<long> supplier, Nullable<long> destination, Nullable<System.DateTime> date)
        {
            var transactionParameter = transaction.HasValue ?
                new ObjectParameter("transaction", transaction) :
                new ObjectParameter("transaction", typeof(long));
    
            var supplierParameter = supplier.HasValue ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(long));
    
            var destinationParameter = destination.HasValue ?
                new ObjectParameter("destination", destination) :
                new ObjectParameter("destination", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrder", transactionParameter, supplierParameter, destinationParameter, dateParameter);
        }
    
        public virtual int AddOrderItem(Nullable<long> order, Nullable<long> part, string batchNumber, Nullable<decimal> amout)
        {
            var orderParameter = order.HasValue ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(long));
    
            var partParameter = part.HasValue ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            var amoutParameter = amout.HasValue ?
                new ObjectParameter("amout", amout) :
                new ObjectParameter("amout", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrderItem", orderParameter, partParameter, batchNumberParameter, amoutParameter);
        }
    
        public virtual ObjectResult<All_Activities2_Result> All_Activities2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities2_Result>("All_Activities2");
        }
    
        public virtual int DeleteOrderItem(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrderItem", idParameter);
        }
    
        public virtual int AddOrder2(Nullable<long> transaction, Nullable<long> source, Nullable<long> destination, Nullable<System.DateTime> date)
        {
            var transactionParameter = transaction.HasValue ?
                new ObjectParameter("transaction", transaction) :
                new ObjectParameter("transaction", typeof(long));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(long));
    
            var destinationParameter = destination.HasValue ?
                new ObjectParameter("destination", destination) :
                new ObjectParameter("destination", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrder2", transactionParameter, sourceParameter, destinationParameter, dateParameter);
        }
    
        public virtual ObjectResult<ItemsOrder_Result> ItemsOrder(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemsOrder_Result>("ItemsOrder", orderIDParameter);
        }
    
        public virtual ObjectResult<Items_Order_Result> Items_Order(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Items_Order_Result>("Items_Order", orderIDParameter);
        }
    
        public virtual int DeleteOrder(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrder", idParameter);
        }
    
        public virtual int EditOrderItem(Nullable<long> id, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditOrderItem", idParameter, amountParameter);
        }
    
        public virtual ObjectResult<SelectBatchNumber_Result> SelectBatchNumber(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectBatchNumber_Result>("SelectBatchNumber", idParameter);
        }
    
        public virtual ObjectResult<All_Activities_OrderByAmount_Result> All_Activities_OrderByAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_OrderByAmount_Result>("All_Activities_OrderByAmount");
        }
    
        public virtual ObjectResult<All_Activities_OrderByDate_Result> All_Activities_OrderByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_OrderByDate_Result>("All_Activities_OrderByDate");
        }
    
        public virtual ObjectResult<All_Activities_OrderByDestination_Result> All_Activities_OrderByDestination()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_OrderByDestination_Result>("All_Activities_OrderByDestination");
        }
    
        public virtual ObjectResult<All_Activities_OrderByPartName_Result> All_Activities_OrderByPartName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_OrderByPartName_Result>("All_Activities_OrderByPartName");
        }
    
        public virtual ObjectResult<All_Activities_OrderBySource_Result> All_Activities_OrderBySource()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_OrderBySource_Result>("All_Activities_OrderBySource");
        }
    
        public virtual ObjectResult<All_Activities_OrderByTransactionType_Result> All_Activities_OrderByTransactionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_OrderByTransactionType_Result>("All_Activities_OrderByTransactionType");
        }
    }
}
