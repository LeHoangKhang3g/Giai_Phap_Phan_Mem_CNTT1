//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Session4Entities : DbContext
    {
        public Session4Entities()
            : base("name=Session4Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Part> Parts { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
    
        public virtual ObjectResult<AllActivities_Result> AllActivities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllActivities_Result>("AllActivities");
        }
    
        public virtual ObjectResult<SelectAllActivities_Result> SelectAllActivities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllActivities_Result>("SelectAllActivities");
        }
    
        public virtual ObjectResult<All_Activities_Result> All_Activities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<All_Activities_Result>("All_Activities");
        }
    
        public virtual ObjectResult<Nullable<decimal>> CURRENT_STOCK(Nullable<long> wareHouseID, Nullable<long> partID, string batchNumber)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CURRENT_STOCK", wareHouseIDParameter, partIDParameter, batchNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OUT_OF_STOCK(Nullable<long> wareHouseID, Nullable<long> partID, string batchNumber)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OUT_OF_STOCK", wareHouseIDParameter, partIDParameter, batchNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RECEIVED_STOCK(Nullable<long> wareHouseID, Nullable<long> partID, string batchNumber)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RECEIVED_STOCK", wareHouseIDParameter, partIDParameter, batchNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CURRENT_STOCK_2(Nullable<long> wareHouseID, Nullable<long> partID)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CURRENT_STOCK_2", wareHouseIDParameter, partIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OUT_OF_STOCK_2(Nullable<long> wareHouseID, Nullable<long> partID)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OUT_OF_STOCK_2", wareHouseIDParameter, partIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RECEIVED_STOCK_2(Nullable<long> wareHouseID, Nullable<long> partID)
        {
            var wareHouseIDParameter = wareHouseID.HasValue ?
                new ObjectParameter("wareHouseID", wareHouseID) :
                new ObjectParameter("wareHouseID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("partID", partID) :
                new ObjectParameter("partID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RECEIVED_STOCK_2", wareHouseIDParameter, partIDParameter);
        }
    }
}
